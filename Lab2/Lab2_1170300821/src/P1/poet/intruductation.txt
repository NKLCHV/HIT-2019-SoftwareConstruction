<p> GraphPoet使用文本语料库进行初始化，用于派生单词亲和关系图。
图中的顶点是单词。单词被定义为非空格非敏感字符串的非空格非换行符。
它们在语料库中通过空格，换行符或文件末尾分隔。
图中的边数计数邻接：语料库中“w1”跟随“w2”的次数是从w1到w2的边的权重。

<p>例如，鉴于此语料库：<pre>你好，你好，你好，再见！ </ PRE>
<p>图表将包含两条边：<ul> <li>（“hello，”） - >（“hello”），重量为2 
<li>（“hello，”） - >（“再见！”）权重1 </ ul> 
<p>其中顶点表示不区分大小写的{@code“hello，”}和{@code“再见！”}。

<p>给定一个输入字符串，GraphPoet通过尝试在输入中的每对相邻字之间插入
一个桥接字来生成一首诗。输入字“w1”和“w2”之间的桥接字将是一些“b”，
使得w1-> b-> w2是在所有两条边长路径中具有最大权重权重的双边长路径
从亲和力图中的w1到w2。如果没有这样的路径，则不插入桥接字。在输出诗中，
输入词保留其原始情况，而桥接词则为小写。诗中每个单词之间的空白是一个空格。

<p>例如，鉴于此语料库：
 * <pre>这是对Mugar Omni Theater音响系统的测试。 </ PRE>
 * <p>关于此输入：
 * <pre>测试系统。 </ PRE>
 * <p>输出诗将是：
 * <pre>系统测试。 </ PRE>

<p> PS2指令：这是必需的ADT类，您不得削弱所需的规范。但是，您可以加强规范，
并可以添加其他方法。你必须在你的代表中使用Graph，否则这个类的实现取决于你。